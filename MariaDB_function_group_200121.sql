-- ROUND


SELECT * FROM EMP;

SELECT SAL * 0.5, ROUND(SAL*0.5, 0) FROM EMP;


SELECT ROUND(123.321, 1)


--SUBSTR

SELECT SUBSTR(HIREDATE, 1, 10) FROM EMP; #첫번째 부터 10번째까지 출력


--CONCAT

SELECT * FROM EMP 
WHERE ENAME LIKE '%A%';

SELECT * FROM EMP 
WHERE ENAME LIKE '%','A','%';

-- NOW 
SELECT NOW();
SELECT DATE_FORMAT(NOW(), '%Y/%M/%D/%H:%I:%S'); #시,분,초 


-- CASE , WHEN THEN 
SELECT * FROM EMP;
SELECT *,
			IFNULL(COMM, 0), #IFNULL = 값이 없을 때  
			CASE DEPTNO
				WHEN 10 THEN '총무'
				WHEN 20 THEN '운영'
				ELSE '기타' END
 FROM EMP;


SELECT * FROM 제품;
SELECT MIN(재고량), 제품명  FROM 제품; # 이렇게 쓰면 잘못된 데이터가 나오게 됨. 

SELECT * 
 FROM 제품 
 WHERE 재고량 =(SELECT MAX(재고량) 
 						FROM 제품); --서브쿼리 

SELECT * FROM 고객;

SELECT COUNT(나이) FROM 고객; -- NULL 제외해야 함. 
SELECT COUNT(*) FROM 고객;
SELECT COUNT(1) FROM 고객; #고객테이블이 있는 만큼 1이 찍혀나온다. 

SELECT 1 FROM 고객; 


SELECT COUNT(EMPNO) FROM EMP;

-- 연습문제 

SELECT COUNT(EMPNO)  # 또는 SELECT COUNT(*) FROM EMP
 FROM EMP
 WHERE MGR IS NOT NULL;


SELECT SUM(SAL)
 FROM EMP
 WHERE SAL <= 2000;
 
SELECT COUNT(EMPNO), AVG(SAL)
 FROM EMP
 WHERE JOB = 'MANAGER';
 

SELECT MIN(SAL)
 FROM EMP
 
 
SELECT MAX(SAL)
 FROM EMP
 WHERE DEPTNO = 30;
 
 
SELECT COUNT(DISTINCT JOB) AS '모든직무수' FROM EMP;
 
 
-- GROUP BY

SELECT * FROM 제품;

SELECT 제조업체,COUNT(제조업체) FROM 제품
 GROUP BY 제조업체;



----HAVING
# '고객' 테이블에서 적립금 평균이 1000원 이상인 등급에 대해 등급별 고객 수와
# 적립금 평균을 검색
SELECT 등급, ROUND(AVG(적립금),0),COUNT(*)
  FROM 고객
 GROUP BY 등급HAVING AVG(적립금) >= 1000 
 ORDER BY 등급  DESC;
 
 ---------
 
 SELECT DEPTNO, COUNT(*)
  FROM EMP
 GROUP BY DEPTNO;
 
 
 SELECT SUM(SAL), DEPTNO
  FROM EMP
  GROUP BY DEPTNO;
 
 
 SELECT COUNT(*), DEPTNO, JOB 
  FROM EMP
  GROUP BY DEPTNO, JOB;
 
 
 SELECT JOB, COUNT(*)
  FROM EMP
  GROUP BY JOB HAVING COUNT(*)>=3;
  

SELECT DEPTNO, COUNT(*)
 FROM EMP
 
 
SELECT DEPTNO, COUNT(*)
 FROM EMP

 GROUP BY DEPTNO HAVING COUNT(*) <= 2;
 




SELECT * FROM EMP 



CREATE TABLE NOODLE (
 NUM INT
 , NAME VARCHAR(50)
 , COMPANY VARCHAR(10)
 , KIND VARCHAR(1)
 , PRICE INT
 , E_DATE DATETIME
);


INSERT INTO NOODLE VALUES (
 1, '안성탕면', '농심', 'M', 700, NOW() + INTERVAL 3 MONTH);
INSERT INTO NOODLE VALUES (
 1, '김치라면', '삼양', 'M', 700, NOW() + INTERVAL 3 MONTH);
INSERT INTO NOODLE VALUES (
 1, '진라면', '오뚜기', 'C', 800, NOW() + INTERVAL 3 MONTH);
INSERT INTO NOODLE VALUES (
 1, '꼬꼬면', '팔도', 'C', 1000, NOW() + INTERVAL 3 MONTH);
INSERT INTO NOODLE VALUES (
 2, '신라면', '농심', 'C', 1100, NOW() + INTERVAL 3 MONTH);
INSERT INTO NOODLE VALUES (
 2, '삼양라면', '삼양', 'M', 700, NOW() + INTERVAL 3 MONTH);
INSERT INTO NOODLE VALUES (
 3, '너구리', '농심', 'M', 850, NOW() + INTERVAL 3 MONTH);
INSERT INTO NOODLE VALUES (
 3, '나가사키짬뽕', '삼양', 'C', 1300, NOW() + INTERVAL 3 MONTH);
INSERT INTO NOODLE VALUES (
 4, '짜파게티', '농심', 'C', 1200, NOW() + INTERVAL 3 MONTH);
 

#가. 

SELECT * FROM NOODLE


SELECT COMPANY, CONVERT(CONCAT(COUNT(*),'개') USING UTF8) AS "COUNT"
FROM NOODLE
GROUP BY COMPANY;
# 혹은 한글 깨질 때 CAST(CONCAT(COUNT(*),'개') AS VARCHAR(10)) 이라고 쓴다. 

#나.
SELECT COMPANY, CONVERT(CONCAT(COUNT(*),'개') USING UTF8) AS "COUNT"
FROM NOODLE
GROUP BY COMPANY
ORDER BY COUNT(*);
 

#다.
SELECT COMPANY, CONVERT(CONCAT(COUNT(*),'개') USING UTF8) AS "COUNT"
FROM NOODLE
GROUP BY COMPANY HAVING COUNT(*)>=3;


#라.

SELECT NAME, COMPANY, 
       DATE_FORMAT(E_DATE,'%Y년 %m월 %d일')
FROM NOODLE
WHERE KIND = 'M' AND PRICE >=800;


#마. 
SELECT CONCAT(MAX(PRICE),'원')
FROM NOODLE
WHERE KIND = 'C'


#바.

SELECT COMPANY, CONCAT(MIN(PRICE),'원')
FROM NOODLE
GROUP BY COMPANY 
ORDER BY PRICE

#사.

SELECT COMPANY, SUM(PRICE) AS '제조사별 합계' 
FROM NOODLE
GROUP BY COMPANY
ORDER BY SUM(PRICE)


#아.

SELECT COMPANY, CONCAT(ROUND(AVG(PRICE),0),'원') AS '제조사별평균'
FROM NOODLE
GROUP BY COMPANY
ORDER BY ROUND(AVG(PRICE),0) DESC




#건수 : COUNT












